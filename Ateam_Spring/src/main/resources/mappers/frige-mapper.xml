<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="frige.mapper">
	<sql id="update">
		<if test="shelf_life_start != null and shelf_life_end != null">
			app_frige_contents_list_tb set content_nm = #{content_nm}, content_ty = #{content_ty},
			shelf_life_start = #{shelf_life_start}, shelf_life_end = #{shelf_life_end}, content_check = 1
		</if>
		<if test="shelf_life_start != null and shelf_life_end == null">
			app_frige_contents_list_tb set content_nm = #{content_nm}, content_ty = #{content_ty},
			shelf_life_start = #{shelf_life_start}, content_check = 1
		</if>
		<if test="shelf_life_start == null and shelf_life_end != null ">
			app_frige_contents_list_tb set content_nm = #{content_nm}, content_ty = #{content_ty},
			shelf_life_end = #{shelf_life_end}, content_check = 1
		</if>
		<if test="shelf_life_start == null and shelf_life_end == null">
			app_frige_contents_list_tb set content_nm = #{content_nm}, content_ty = #{content_ty},
			content_check = 1
		</if>
	</sql>

	<update id="irdntConfirm">
		update <include refid="update"></include>
		where content_list_id = #{content_list_id}
	</update>

	<insert id="insert">
		INSERT INTO APP_FRIGE_CONTENTS_LIST_TB(user_id, content_list_id, content_nm, content_ty, shelf_life_start, shelf_life_end)
		VALUES(#{user_id}, list_id.nextval, #{content_nm}, 
			(SELECT content_ty FROM APP_FRIGE_CONTENTS_TB WHERE irdnt_nm LIKE #{content_nm}), SYSDATE,
			SYSDATE+(SELECT due_date FROM APP_FRIGE_CONTENTS_TB WHERE irdnt_nm LIKE #{content_nm}))
	</insert>
	
	<sql id="select_irdnt">
		content_list_id, content_nm, content_ty, TO_CHAR(shelf_life_start, 'YYYY-MM-DD') shelf_life_start
			, TO_CHAR(shelf_life_end, 'YYYY-MM-DD') shelf_life_end, image_name, image_path 
		FROM APP_FRIGE_CONTENTS_LIST_TB 
		WHERE user_id = #{user_id}
	</sql>
	
	<select id="irdntListType" parameterType="frigecontents.dto.FrigeViewDTO" resultType="frigecontents.dto.FrigeContentsDTO">
		SELECT <include refid="select_irdnt"/>
		AND content_ty = #{content_ty}
		ORDER BY shelf_life_end
	</select>	
	
	<select id="irdntListDate" resultType="frigecontents.dto.FrigeContentsDTO">
		SELECT <include refid="select_irdnt"/>
		ORDER BY shelf_life_end
	</select>
	
	<select id="irdntListName" resultType="frigecontents.dto.FrigeContentsDTO">
		SELECT <include refid="select_irdnt"/>
		ORDER BY content_nm
	</select>
	
	<delete id="delete">
		DELETE FROM APP_FRIGE_CONTENTS_LIST_TB 
		WHERE user_id = #{user_id} AND content_list_id = #{content_list_id}
	</delete>
	
	<select id="getLifeEndNum" resultType="_int">
		<![CDATA[
			select count(*) 
			from app_frige_contents_list_tb 
			where user_id = #{user_id} 
			and round(shelf_life_end - sysdate) <= ceil((shelf_life_end - shelf_life_start)/5)
		]]>
	</select>
	
	<select id="getLifeEndList" resultType="_long">
		<![CDATA[
			select content_list_id 
			from app_frige_contents_list_tb 
			where user_id = #{user_id} 
			and round(shelf_life_end - sysdate) <= ceil((shelf_life_end - shelf_life_start)/5)
		]]>
	</select>
	
	<select id="getLifeEndUsers" resultType="frigecontents.dto.FrigeContentsDTO">
		<![CDATA[
			select count(*) num, u.device_token device_token
			from app_frige_contents_list_tb f, mst_user_info_tb u
			where round(shelf_life_end - sysdate) 
			<= ceil((shelf_life_end - shelf_life_start)/5)
			and f.user_id = u.user_id
			and device_token is NOT null
			group by u.device_token
      	]]>
	</select>
	
	<select id="getNewContentNum" resultType="_int">
		select count(*)
		from app_frige_contents_list_tb 
		where user_id = #{user_id}
		and content_check = 0
	</select>
	
	<select id="getNewContentList" resultType="_long">
		select content_list_id
		from app_frige_contents_list_tb 
		where user_id = #{user_id}
		and content_check = 0
	</select>
</mapper>